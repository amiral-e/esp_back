name: Tests and Conditional Workflow

on: [push, pull_request]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    outputs:
      passed: ${{ steps.test-results.outputs.passed }}
      failed: ${{ steps.test-results.outputs.failed }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11.x

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run tests and get results
      id: test-results
      run: |
        bun test | tee test-output.txt
        
        # Extraction des résultats avec valeurs par défaut
        passed=$(grep -oE '(\d+) passed' test-output.txt | awk '{print $1}' || echo "0")
        failed=$(grep -oE '(\d+) failed' test-output.txt | awk '{print $1}' || echo "0")
        
        # Validation des nombres
        if ! [[ "$passed" =~ ^[0-9]+$ ]]; then passed=0; fi
        if ! [[ "$failed" =~ ^[0-9]+$ ]]; then failed=0; fi
        
        echo "passed=$passed" >> $GITHUB_OUTPUT
        echo "failed=$failed" >> $GITHUB_OUTPUT

  trigger-fly-deploy:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check test results
        id: check-results
        env:
          PASSED: ${{ needs.run-tests.outputs.passed }}
          FAILED: ${{ needs.run-tests.outputs.failed }}
        run: |
          total=$((PASSED + FAILED))
          
          if [ $total -eq 0 ]; then
            echo "::error::Aucun test exécuté!"
            exit 1
          fi
          
          # Calcul avec bc pour les décimales
          percent=$(echo "scale=2; $PASSED / $total * 100" | bc)
          echo "Percentage: $percent%"
          
          # Comparaison numérique (40% ici)
          if (( $(echo "$percent >= 40" | bc -l) )); then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Fly Deploy workflow
        if: steps.check-results.outputs.success == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "fly-deploy-dev.yml",
              ref: "${{ github.ref }}",
              inputs: {}
            })